SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO

CREATE PROCEDURE [dbo].[TMT_CREATEACCESSORY]
@UNIT_IDTYPE char(12),
@UNIT_ID char(13),
@ACC_TYPE CHAR(6),
@ACC_ID char(12),
@ACC_QUANTITY int,
@ACC_COST float,
@ACC_HOURS int,
@ACC_DATE_ACQUIRED datetime,
@ACC_OPERCOST float,
@ACC_FUELTYPE char(6),
@ACC_EXPIRATION_DATE datetime,
@ERRORCODE int OUTPUT

AS

DECLARE @LabelFileDef as varchar(6)

SET @ERRORCODE=0

IF @UNIT_IDTYPE = 'TRACTOR'
BEGIN
SELECT @UNIT_IDTYPE = 'TRC'
END

IF @UNIT_IDTYPE = 'TRAILER'
BEGIN
SELECT @UNIT_IDTYPE = 'TRL'
END

-- ****************************************************************************
-- Grab Unit Type Definitions from TMT Lookup Table
-- ****************************************************************************
IF @UNIT_IDTYPE <> 'TRC' OR @UNIT_IDTYPE <> 'TRL'
BEGIN
IF EXISTS(SELECT [CODE]
FROM [dbo].[TMTUNITTYPE] (NOLOCK)
WHERE [CODE] = @UNIT_IDTYPE)
BEGIN
SELECT @UNIT_IDTYPE = [TMWDESIGNATION]
FROM [dbo].[TMTUNITTYPE] (NOLOCK)
WHERE [CODE] = @UNIT_IDTYPE
END
END
ELSE
BEGIN
SELECT @ERRORCODE=-1
GOTO ERROR_EXIT
END

-- ****************************************************************************
-- Check to make sure that these are valid TMW Assets
-- ****************************************************************************
IF @UNIT_IDTYPE = 'TRC'
BEGIN
IF NOT EXISTS(SELECT [TRC_NUMBER] FROM [dbo].[TRACTORPROFILE] (NOLOCK)
WHERE [TRC_NUMBER]=@UNIT_ID)
BEGIN
SELECT @ERRORCODE=-2
GOTO ERROR_EXIT
END
END
ELSE IF @UNIT_IDTYPE = 'TRL'
BEGIN
IF NOT EXISTS(SELECT [TRL_NUMBER] FROM [dbo].[TRAILERPROFILE] (NOLOCK)
WHERE [TRL_NUMBER] = @UNIT_ID)
BEGIN
SELECT @ERRORCODE=-4
GOTO ERROR_EXIT
END
END


-- ****************************************************************************
-- Check Remaining parameters
-- ****************************************************************************
IF @UNIT_IDTYPE = 'TRC'
set @LabelFileDef = 'TrcAcc'
ELSE IF @UNIT_IDTYPE = 'TRL'
set @LabelFileDef = 'TrlAcc'

IF @UNIT_IDTYPE in ('TRC','TRL')
BEGIN
EXEC tmw_AddLabelFileEntries_sp @ERRORCODE OUT, 'ADD', @LabelFileDef, @ACC_TYPE, @ACC_TYPE, @LabelFileDef
IF NOT EXISTS (SELECT NULL
FROM [dbo].[LABELFILE]
WHERE [LABELDEFINITION] = @LabelFileDef AND
[ABBR] = @ACC_TYPE)
BEGIN
SELECT @ACC_TYPE
SELECT @ERRORCODE=-5
GOTO ERROR_EXIT
END
END

if (isnull(@ACC_ID, '') = '')
BEGIN
SELECT @ERRORCODE=-6
GOTO ERROR_EXIT
END

--IF @UNIT_IDTYPE = 'TRC'
--        BEGIN
IF (ISDATE(@ACC_EXPIRATION_DATE) <> 1)
SET @ACC_EXPIRATION_DATE = CONVERT(DATETIME, '12/31/2049 23:59')
--        END

IF (@ACC_QUANTITY = 0)
SET @ACC_QUANTITY = 0

-- ****************************************************************************
-- Save Accessory
-- MRH 5/7/2014 changed to be consistent with TMWS indexes.
-- ****************************************************************************
-- Test to see if duplicate accessories are enabled (not recomended).
IF (SELECT COUNT(0) FROM generalinfo WHERE gi_name = 'Shoplink_dup_accessories' AND gi_string1 = 'Y') > 0
BEGIN
IF @UNIT_IDTYPE = 'TRC'
BEGIN
-- tca_type, tca_tractor, tca_source, tca_id
SELECT @UNIT_ID,@ACC_TYPE,@ACC_ID

IF NOT EXISTS (SELECT [TCA_ID]
FROM [dbo].[TRACTORACCESORIES]
WHERE [TCA_TRACTOR] = @UNIT_ID AND
[TCA_TYPE] = @ACC_TYPE AND
[TCA_ID] = @ACC_ID AND
[TCA_SOURCE] =  'TRC')
BEGIN


INSERT INTO [dbo].[TRACTORACCESORIES]
([TCA_TRACTOR], [TCA_QUANTITIY], [TCA_TYPE], [TCA_ID], [TCA_COST], [TCA_HOURS],
[TCA_DATEAQUIRED], [TCA_OPERCOST], [TCA_FUELTYPE], [TCA_EXPIRE_DATE], [TCA_SOURCE])
VALUES (@UNIT_ID, @ACC_QUANTITY, @ACC_TYPE, @ACC_ID, @ACC_COST, @ACC_HOURS, @ACC_DATE_ACQUIRED,
@ACC_OPERCOST, @ACC_FUELTYPE, @ACC_EXPIRATION_DATE, 'TRC')
END
ELSE
BEGIN

UPDATE [dbo].[TRACTORACCESORIES] SET [TCA_ID] = @ACC_ID, [TCA_COST] = @ACC_COST,
[TCA_HOURS] = @ACC_HOURS, [TCA_DATEAQUIRED] = @ACC_DATE_ACQUIRED,
[TCA_OPERCOST] = @ACC_OPERCOST, [TCA_FUELTYPE] = @ACC_FUELTYPE,
[TCA_EXPIRE_DATE] = @ACC_EXPIRATION_DATE, [TCA_SOURCE] = 'TRC',
[TCA_QUANTITIY] = @ACC_QUANTITY
WHERE [TCA_TRACTOR] = @UNIT_ID AND
[TCA_TYPE] = @ACC_TYPE AND
[TCA_ID] = @ACC_ID AND
[TCA_SOURCE] =  'TRC'
END
END -- TRC
ELSE IF @UNIT_IDTYPE = 'TRL'
BEGIN
IF NOT EXISTS (SELECT NULL
FROM [dbo].[TRLACCESSORIES]
WHERE [TA_TRAILER] = @UNIT_ID AND
[TA_TYPE] = @ACC_TYPE AND
[TA_ID] = @ACC_ID)
BEGIN
INSERT INTO [dbo].[TRLACCESSORIES]
([TA_TRAILER], [TA_QUANTITY], [TA_TYPE], [TA_ID], [TA_COST], [TA_HOURS],
[TA_DATEACQUIRED], [TA_OPERCOST], [TA_FUELTYPE], [TA_EXPIRE_DATE], [TA_SOURCE])
VALUES (@UNIT_ID, @ACC_QUANTITY, @ACC_TYPE, @ACC_ID, @ACC_COST, @ACC_HOURS, @ACC_DATE_ACQUIRED,
@ACC_OPERCOST, @ACC_FUELTYPE, @ACC_EXPIRATION_DATE, 'TRL')
END
ELSE
BEGIN
UPDATE [dbo].[TRLACCESSORIES] SET [TA_ID] = @ACC_ID, [TA_COST] = @ACC_COST,
[TA_HOURS] = @ACC_HOURS, [TA_DATEACQUIRED] = @ACC_DATE_ACQUIRED,
[TA_OPERCOST] = @ACC_OPERCOST, [TA_FUELTYPE] = @ACC_FUELTYPE,
[TA_EXPIRE_DATE] = @ACC_EXPIRATION_DATE, [TA_SOURCE] = 'TRL',
[TA_QUANTITY] = @ACC_QUANTITY
WHERE [TA_TRAILER] = @UNIT_ID AND [TA_TYPE] = @ACC_TYPE
END
END -- TRL
END -- DUP ACCESSORIES
ELSE -- do not allow dup accessories (new default logic)
BEGIN
IF @UNIT_IDTYPE = 'TRC'
BEGIN
-- tca_type, tca_tractor, tca_source, tca_id
SELECT @UNIT_ID,@ACC_TYPE,@ACC_ID

IF NOT EXISTS (SELECT [TCA_ID]
FROM [dbo].[TRACTORACCESORIES]
WHERE [TCA_TRACTOR] = @UNIT_ID AND
[TCA_TYPE] = @ACC_TYPE AND
---[TCA_ID] = @ACC_ID AND
[TCA_SOURCE] =  'TRC')
BEGIN
INSERT INTO [dbo].[TRACTORACCESORIES]
([TCA_TRACTOR], [TCA_QUANTITIY], [TCA_TYPE], [TCA_ID], [TCA_COST], [TCA_HOURS],
[TCA_DATEAQUIRED], [TCA_OPERCOST], [TCA_FUELTYPE], [TCA_EXPIRE_DATE], [TCA_SOURCE])
VALUES (@UNIT_ID, @ACC_QUANTITY, @ACC_TYPE, @ACC_ID, @ACC_COST, @ACC_HOURS, @ACC_DATE_ACQUIRED,
@ACC_OPERCOST, @ACC_FUELTYPE, @ACC_EXPIRATION_DATE, 'TRC')
END
ELSE
BEGIN
UPDATE [dbo].[TRACTORACCESORIES] SET [TCA_ID] = @ACC_ID, [TCA_COST] = @ACC_COST,
[TCA_HOURS] = @ACC_HOURS, [TCA_DATEAQUIRED] = @ACC_DATE_ACQUIRED,
[TCA_OPERCOST] = @ACC_OPERCOST, [TCA_FUELTYPE] = @ACC_FUELTYPE,
[TCA_EXPIRE_DATE] = @ACC_EXPIRATION_DATE, [TCA_SOURCE] = 'TRC',
[TCA_QUANTITIY] = @ACC_QUANTITY
WHERE [TCA_TRACTOR] = @UNIT_ID AND
[TCA_TYPE] = @ACC_TYPE AND
--[TCA_ID] = @ACC_ID AND
[TCA_SOURCE] =  'TRC'
END
END -- TRC
ELSE IF @UNIT_IDTYPE = 'TRL'
BEGIN -- index: ta_trailer, ta_type, ta_source
IF NOT EXISTS (SELECT [trlaccessory_id]
FROM [dbo].[TRLACCESSORIES]
WHERE [TA_TRAILER] = @UNIT_ID AND
[TA_TYPE] = @ACC_TYPE AND
[TA_SOURCE] = 'TRL')
BEGIN
INSERT INTO [dbo].[TRLACCESSORIES]
([TA_TRAILER], [TA_QUANTITY], [TA_TYPE], [TA_ID], [TA_COST], [TA_HOURS],
[TA_DATEACQUIRED], [TA_OPERCOST], [TA_FUELTYPE], [TA_EXPIRE_DATE], [TA_SOURCE])
VALUES (@UNIT_ID, @ACC_QUANTITY, @ACC_TYPE, @ACC_ID, @ACC_COST, @ACC_HOURS, @ACC_DATE_ACQUIRED,
@ACC_OPERCOST, @ACC_FUELTYPE, @ACC_EXPIRATION_DATE, 'TRL')
END
ELSE
BEGIN
UPDATE [dbo].[TRLACCESSORIES] SET [TA_ID] = @ACC_ID, [TA_COST] = @ACC_COST,
[TA_HOURS] = @ACC_HOURS, [TA_DATEACQUIRED] = @ACC_DATE_ACQUIRED,
[TA_OPERCOST] = @ACC_OPERCOST, [TA_FUELTYPE] = @ACC_FUELTYPE,
[TA_EXPIRE_DATE] = @ACC_EXPIRATION_DATE, [TA_SOURCE] = 'TRL',
[TA_QUANTITY] = @ACC_QUANTITY
WHERE [TA_TRAILER] = @UNIT_ID AND
[TA_TYPE] = @ACC_TYPE
AND TA_SOURCE = 'TRL'
END
END -- TRL
END -- NOT DUP ACCESSORIES

select @@error

GOTO NO_ERROR_EXIT

ERROR_EXIT:

NO_ERROR_EXIT:

GO
GRANT EXECUTE ON  [dbo].[TMT_CREATEACCESSORY] TO [public]
GO
