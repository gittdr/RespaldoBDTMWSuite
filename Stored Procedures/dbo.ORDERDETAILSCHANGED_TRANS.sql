SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROCEDURE [dbo].[ORDERDETAILSCHANGED_TRANS]
@Ord_hdrnumber INT, @WorkflowID INT, 
@OrderCollection VARCHAR(1000), @StopCollection VARCHAR(1000), @FreightCollection VARCHAR(1000), @EventCollection VARCHAR(1000), @REFTYPECollection VARCHAR(1000),
@PUPStopCollection VARCHAR(1000),@DRPStopCollection VARCHAR(1000), @ALLStopCollection VARCHAR(1000),@NONEStopCollection VARCHAR(1000),
@PUPFREIGHTCollection VARCHAR(1000),@DRPFREIGHTCollection VARCHAR(1000) , @ALLFREIGHTCollection VARCHAR(1000), @NONEFREIGHTCollection VARCHAR(1000),
@PUPEVENTCollection VARCHAR(1000),@DRPEVENTCollection VARCHAR(1000) , @ALLEVENTCollection VARCHAR(1000), @NONEEVENTCollection VARCHAR(1000), 
@Initialize varchar(10), @Result varchar(50) OUTPUT, @STOPRESULT varchar(50) OUTPUT, @FREIGHTRESULT varchar(50) OUTPUT, @EVENTRESULT varchar(50) OUTPUT, @REFRESULT varchar(50) OUTPUT,
@ErrorNumber INT OUTPUT, @ErrorLine INT OUTPUT, @ErrorMessage NVARCHAR(4000) OUTPUT

AS

DECLARE @SqlCmd VARCHAR(MAX) DECLARE @Sqltbl VARCHAR(500) 
DECLARE @OrderCollectionCopy VARCHAR(MAX) = @OrderCollection DECLARE @StopCollectionCopy VARCHAR(MAX) = @StopCollection 
DECLARE @FreightCollectionCopy VARCHAR(MAX) = @FreightCollection DECLARE @EVENTCollectionCopy VARCHAR(MAX) = @EVENTCollection 
DECLARE @REFNUMCollectionCopy VARCHAR(MAX) = @REFTYPECollection
DECLARE @WORKFLOWTEMPLATEID INT

Declare @ID int, @Columns varchar(max), @Column varchar(30), @Column_End int, @Sql varchar(max)

DECLARE @TEMP table (tableName	varchar (50)) DECLARE @TEMP1 table (tableName	varchar (50)) 

BEGIN -- SP

 BEGIN TRY
  BEGIN TRANSACTION
SELECT @WORKFLOWTEMPLATEID = WORKFLOW_TEMPLATE_ID FROM WORKFLOW WHERE WORKFLOW_ID = CONVERT(VARCHAR(50),@WORKFLOWID)
SET @ErrorNumber = 0
SET @ErrorLine =0
SET @ErrorMessage = ' '
--SET @Sqltbl = 'WCORDERTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)
IF @Initialize IS NULL
SET @Initialize = 'Y'
IF @Initialize = 'Y'
	BEGIN
	DELETE FROM @TEMP

	-- WorkCycle OrderTracking	
		IF (EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'WCORDERTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)))
		BEGIN
			SET @SqlCmd = 'DROP TABLE WCORDERTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)
			EXEC(@SqlCmd)
		END	
		IF (@OrderCollectionCopy != ' ')
		BEGIN
			SET @SqlCmd = 'SELECT  IDENTITY(int, 1,1) AS ID, ORD_HDRNUMBER , ' +@OrderCollection+ ' INTO WCORDERTRACKING_' +CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)+' FROM ORDERHEADER WHERE ORD_HDRNUMBER ='+CONVERT(VARCHAR(50),@Ord_hdrnumber)+''
			EXEC (@SqlCmd)
			SET @SqlCmd = 'CREATE INDEX orderindex ON WCORDERTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)+'(ORD_HDRNUMBER)'
			EXEC (@SqlCmd)
			--SET @SqlCmd = 'SELECT COUNT(0) FROM WCORDERTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)+' WHERE ORD_HDRNUMBER='+CONVERT(VARCHAR(50),@Ord_hdrnumber)
			SET @SqlCmd = 'SELECT COUNT(0) FROM ORDERHEADER WHERE ORD_HDRNUMBER ='+CONVERT(VARCHAR(50),@Ord_hdrnumber)
			INSERT @TEMP
			EXEC (@SqlCmd)
			IF((SELECT * FROM @TEMP) = 0)
			SELECT @Result = 'ORDER DOES NOT EXISTS'
			ELSE
			SELECT @Result = 'NEW ORDER'
			DELETE FROM @TEMP
		END
		ELSE
		SELECT @Result = ' '

	--Workcycle StopsTracking	
		IF (EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'WCSTOPTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)))
		BEGIN
			SET @SqlCmd = 'DROP TABLE WCSTOPTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)
			EXEC(@SqlCmd)
		END
		IF(@StopCollection != ' ')
		BEGIN
			SET @SqlCmd = 'SELECT IDENTITY(int, 1,1) AS ID, ORD_HDRNUMBER, STP_NUMBER, STP_TYPE,   ' +@StopCollection+ ' INTO WCSTOPTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)+' FROM STOPS WHERE ORD_HDRNUMBER ='+CONVERT(VARCHAR(50),@Ord_hdrnumber)+''
			EXEC (@SqlCmd)
			SET @SqlCmd = 'CREATE INDEX stopsindex ON WCSTOPTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)+'(ORD_HDRNUMBER, STP_NUMBER)'
			EXEC(@SqlCmd)
			--SET @SqlCmd = 'SELECT COUNT(0) FROM WCSTOPTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)+' WHERE ORD_HDRNUMBER ='+CONVERT(VARCHAR(50),@Ord_hdrnumber)
			SET @SqlCmd = 'SELECT COUNT(0) FROM ORDERHEADER WHERE ORD_HDRNUMBER ='+CONVERT(VARCHAR(50),@Ord_hdrnumber)
			INSERT @TEMP
			EXEC(@SqlCmd)
			IF((SELECT * FROM @TEMP) = 0)
			SELECT @STOPRESULT = 'STOPS - NO RECORD FOUND'
			ELSE
			SELECT @STOPRESULT = 'STOPS - NEW RECORD'
			DELETE FROM @TEMP
		END
		ELSE
		SELECT @STOPRESULT = ' '

	--Freight Tracking	
		IF (EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'WCFREIGHTTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)))
		BEGIN
			SET @SqlCmd = 'DROP TABLE WCFREIGHTTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)
			EXEC(@SqlCmd)
		END
		IF(@FreightCollection != ' ')
		BEGIN
			SET @SqlCmd = 'SELECT IDENTITY(int, 1,1) AS ID, S.ORD_HDRNUMBER, S.STP_NUMBER, F.FGT_NUMBER, S.STP_TYPE, ' +@FreightCollection+ ' INTO WCFREIGHTTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)+' FROM FREIGHTDETAIL F, STOPS S WHERE S.STP_NUMBER = F.STP_NUMBER AND ORD_HDRNUMBER ='+CONVERT(VARCHAR(50),@Ord_hdrnumber)+''
			EXEC (@SqlCmd)
			SET @SqlCmd = 'CREATE INDEX freightsindex ON WCFREIGHTTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)+'(ORD_HDRNUMBER,STP_NUMBER,FGT_NUMBER )'
			EXEC(@SqlCmd)
			--SET @SqlCmd = 'SELECT COUNT(0) FROM WCFREIGHTTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)+'  WHERE ORD_HDRNUMBER ='+CONVERT(VARCHAR(50),@Ord_hdrnumber)
			SET @SqlCmd = 'SELECT COUNT(0) FROM ORDERHEADER WHERE ORD_HDRNUMBER ='+CONVERT(VARCHAR(50),@Ord_hdrnumber)
			INSERT @TEMP
			EXEC (@SqlCmd)
			IF((SELECT * FROM @TEMP) = 0)
			SELECT @FREIGHTRESULT = 'FREIGHTS - NO RECORD FOUND'
			ELSE
			SELECT @FREIGHTRESULT = 'FREIGHTS - NEW RECORD'
			DELETE FROM @TEMP
		END	
		ELSE
		SELECT @FREIGHTRESULT = ' '

	---- Event Tracking	
		IF (EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'WCEVENTTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)))
		BEGIN
			SET @SqlCmd = 'DROP TABLE WCEVENTTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)
			EXEC(@SqlCmd)
		END
		IF(@EventCollection != ' ')
		BEGIN
			SET @SqlCmd = 'SELECT IDENTITY(int, 1,1) AS ID, E.ORD_HDRNUMBER, E.STP_NUMBER, S.STP_TYPE, E.EVT_NUMBER, ' +@EventCollection+ 
			' INTO WCEVENTTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)+' FROM EVENT E, STOPS S WHERE E.ORD_HDRNUMBER=S.ORD_HDRNUMBER AND
			E.STP_NUMBER=S.STP_NUMBER AND E.ORD_HDRNUMBER ='+CONVERT(VARCHAR(50),@Ord_hdrnumber)+''
			EXEC (@SqlCmd)
			SET @SqlCmd = 'CREATE INDEX eventsindex ON WCEVENTTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)+' (ORD_HDRNUMBER,STP_NUMBER,EVT_NUMBER )'
			EXEC (@SqlCmd)
			--SET @SqlCmd = 'SELECT COUNT(0) FROM WCEVENTTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)+'  WHERE ORD_HDRNUMBER ='+ CONVERT(VARCHAR(50),@Ord_hdrnumber)
			SET @SqlCmd = 'SELECT COUNT(0) FROM ORDERHEADER WHERE ORD_HDRNUMBER ='+CONVERT(VARCHAR(50),@Ord_hdrnumber)
			INSERT @TEMP
			EXEC (@SqlCmd)
			IF((SELECT * FROM @TEMP) = 0)
			SELECT @EVENTRESULT = 'EVENT - NO RECORD FOUND'
			ELSE
			SELECT @EVENTRESULT = 'EVENT - NEW RECORD'
			DELETE FROM @TEMP
		END
		ELSE
		SELECT @EVENTRESULT = ' '

	---- REFERENCENUMBER Tracking	
		IF (EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'WCREFNUMTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)))
		BEGIN
			SET @SqlCmd = 'DROP TABLE WCREFNUMTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)
			EXEC(@SqlCmd)
		END
		IF(@REFTYPECollection != ' ')
		BEGIN
			SET @SqlCmd = 'SELECT IDENTITY(int, 1,1) AS ID, ORD_HDRNUMBER, REF_NUMBER, REF_TABLE, REF_TYPE INTO WCREFNUMTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)+' FROM REFERENCENUMBER WHERE ORD_HDRNUMBER ='+CONVERT(VARCHAR(50),@Ord_hdrnumber)+' AND  REF_TYPE IN ('
			WHILE LEN(@REFNUMCollectionCopy) > 0 
			BEGIN --WHILE
				SET @Column_End = CHARINDEX(',', @REFNUMCollectionCopy)
				IF @Column_End = 0
				SET @Column_End = LEN(@REFNUMCollectionCopy) + 1
				SET @Column = LTRIM(RTRIM(LEFT(@REFNUMCollectionCopy, @Column_End - 1)))	
				SET @SqlCmd = @SqlCmd  +''''+@Column+''''+','			
				SET @REFNUMCollectionCopy = SUBSTRING(@REFNUMCollectionCopy, @Column_End + 1, 2000000000)
			END --WHILE
			SET @SqlCmd = LEFT(@SqlCmd, LEN(@SqlCmd) - 1) + ')'
			EXEC (@SqlCmd)
			SET @SQLCMD = 'CREATE INDEX refnumindex ON WCREFNUMTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)+'(ORD_HDRNUMBER, REF_NUMBER)'
			EXEC (@SQLCMD)
			--SET @SqlCmd = 'SELECT COUNT(0) FROM WCREFNUMTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)+'  WHERE ORD_HDRNUMBER = '+CONVERT(VARCHAR(50),@Ord_hdrnumber)
			SET @SqlCmd = 'SELECT COUNT(0) FROM WCREFNUMTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)+' WHERE ORD_HDRNUMBER ='+CONVERT(VARCHAR(50),@Ord_hdrnumber)
			INSERT @TEMP
			EXEC (@SQLCMD)
			IF((SELECT * FROM @TEMP) = 0)
			SELECT @REFRESULT = 'REFERENCENUMBER - NO RECORD FOUND'
			ELSE
			SELECT @REFRESULT = 'REFERENCE NUMBER - NEW RECORD'
			DELETE FROM @TEMP
			SET @REFNUMCollectionCopy = @REFTYPECollection
		END
		ELSE
			SELECT @REFRESULT = ' '
			SET @Initialize = 'N'
		END	

	ELSE IF @Initialize = 'N'
		BEGIN -- ELSE IF		
			DELETE FROM @TEMP
			-- WCORDERTRACKING BEGIN
			SET @SqlCmd = 'SELECT COUNT(0) FROM ORDERHEADER WHERE ORD_HDRNUMBER ='+CONVERT(VARCHAR(50),@Ord_hdrnumber)
			INSERT @TEMP
			EXEC (@SqlCmd)
			IF((SELECT * FROM @TEMP) = 0)
			BEGIN
				SELECT @Result = 'ORDER DOES NOT EXISTS'
				DELETE FROM @TEMP
			END
			ELSE
			BEGIN	
				DELETE FROM @TEMP		
				IF (EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'WCORDERTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)))
				BEGIN
					SET @SqlCmd ='SELECT COUNT(0) FROM WCORDERTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)+'  WHERE ORD_HDRNUMBER ='+CONVERT(VARCHAR(50),@Ord_hdrnumber)	
					INSERT @TEMP
					EXEC (@SqlCmd)		
					IF ((SELECT * FROM @TEMP) = 0)
					BEGIN
						SET @SqlCmd = 'INSERT INTO WCORDERTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)+' SELECT ORD_HDRNUMBER,  '		
						WHILE LEN(@OrderCollectionCopy) > 0
						BEGIN --WHILE
							SET @Column_End = CHARINDEX(',', @OrderCollectionCopy)
							IF @Column_End = 0
							SET @Column_End = LEN(@OrderCollectionCopy) + 1
							SET @Column = LTRIM(RTRIM(LEFT(@OrderCollectionCopy, @Column_End - 1)))
							SET @SqlCmd = @SqlCmd  + ' O.[' + @Column + '],'
							SET @OrderCollectionCopy = SUBSTRING(@OrderCollectionCopy, @Column_End + 1, 2000000000)
						END--WHILE
						SET @SqlCmd =  LEFT(@SqlCmd, LEN(@SqlCmd) - 1) + ' FROM ORDERHEADER O WHERE O.ORD_HDRNUMBER ='+CONVERT(VARCHAR(50),@Ord_hdrnumber)+''
						EXEC(@SqlCmd)
						SELECT @Result = 'NEW ORDER'
						SET @OrderCollectionCopy = @OrderCollection
						DELETE FROM @TEMP
					END		
					ELSE
					BEGIN
						DELETE FROM @TEMP
						SET @SqlCmd = 'SELECT COUNT(0) FROM ORDERHEADER O RIGHT JOIN WCORDERTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)+'  OT ON OT.ORD_HDRNUMBER = O.ORD_HDRNUMBER 
						WHERE  O.ORD_HDRNUMBER =' +CONVERT(VARCHAR(50),@ORD_HDRNUMBER)
						WHILE LEN(@OrderCollection) > 0
						BEGIN --WHILE
							SET @Column_End = CHARINDEX(',', @OrderCollection)
							IF @Column_End = 0
							SET @Column_End = LEN(@OrderCollection) + 1
							SET @Column = LTRIM(RTRIM(LEFT(@OrderCollection, @Column_End - 1)))--ISNULL(E.[evt_contact],0)
							SET @SqlCmd = @SqlCmd  + ' AND  ISNULL(O.[' + @Column + '],0)  =  ISNULL(OT.[' + @Column + ']' +',0)'
							SET @OrderCollection = SUBSTRING(@OrderCollection, @Column_End + 1, 2000000000)
						END --WHILE
						INSERT @TEMP
						EXEC (@SqlCmd)							
						IF (SELECT * FROM @TEMP) = 0
						BEGIN
							SET @SqlCmd = 'DELETE FROM WCORDERTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)+'  WHERE ORD_HDRNUMBER ='+CONVERT(VARCHAR(50),@Ord_hdrnumber)
							EXEC (@SqlCmd)
							SET @SqlCmd = 'INSERT INTO WCORDERTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)+'  SELECT O.ORD_HDRNUMBER,  '		
							WHILE LEN(@OrderCollectionCopy) > 0
							BEGIN --WHILE
								SET @Column_End = CHARINDEX(',', @OrderCollectionCopy)
								IF @Column_End = 0
								SET @Column_End = LEN(@OrderCollectionCopy) + 1
								SET @Column = LTRIM(RTRIM(LEFT(@OrderCollectionCopy, @Column_End - 1)))
								SET @SqlCmd = @SqlCmd  + ' O.[' + @Column + '],'
								SET @OrderCollectionCopy = SUBSTRING(@OrderCollectionCopy, @Column_End + 1, 2000000000)
							END--WHILE
							SET @SqlCmd =  LEFT(@SqlCmd, LEN(@SqlCmd) - 1) + ' FROM ORDERHEADER O WHERE O.ORD_HDRNUMBER ='+CONVERT(VARCHAR(50),@Ord_hdrnumber)+''
							EXEC(@SqlCmd)
							SELECT @Result =  'ORDERCHANGED'
						END				
						ELSE
							SELECT @Result =  'NO CHANGES IN ORDER'
						DELETE FROM @TEMP
					END
				END		
				ELSE
					SELECT @Result = ' '
			END

			-- WCORDERTRACKING end
			--WCStopTracking BEGIN
			DELETE FROM @TEMP
			SET @SqlCmd = 'SELECT COUNT(0) FROM ORDERHEADER WHERE ORD_HDRNUMBER ='+CONVERT(VARCHAR(50),@Ord_hdrnumber)
			INSERT @TEMP
			EXEC (@SqlCmd)
			IF((SELECT * FROM @TEMP) = 0)
			BEGIN
				SELECT @STOPRESULT = 'STOPS - NO RECORD FOUND'
				DELETE FROM @TEMP
			END
			ELSE
			BEGIN	
				DELETE FROM @TEMP
				IF (EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'WCSTOPTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)))
				BEGIN
					SET @SqlCmd = 'SELECT COUNT(0) FROM WCSTOPTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)+'  WHERE ORD_HDRNUMBER ='+CONVERT(VARCHAR(50),@Ord_hdrnumber)
					INSERT @TEMP
					EXEC (@SqlCmd)
					IF (SELECT * FROM @TEMP) = 0
					BEGIN
						SET @SqlCmd = 'INSERT INTO WCSTOPTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)+'  SELECT S.ORD_HDRNUMBER, S.STP_NUMBER, S.STP_TYPE,  '		
						WHILE LEN(@StopCollectionCopy) > 0
						BEGIN --WHILE
							SET @Column_End = CHARINDEX(',', @StopCollectionCopy)
							IF @Column_End = 0
							SET @Column_End = LEN(@StopCollectionCopy) + 1
							SET @Column = LTRIM(RTRIM(LEFT(@StopCollectionCopy, @Column_End - 1)))
							SET @SqlCmd = @SqlCmd  + ' S.[' + @Column + '],'
							SET @StopCollectionCopy = SUBSTRING(@StopCollectionCopy, @Column_End + 1, 2000000000)
						END--WHILE
						SET @SqlCmd =  LEFT(@SqlCmd, LEN(@SqlCmd) - 1) + ' FROM STOPS S WHERE S.ORD_HDRNUMBER ='+CONVERT(VARCHAR(50),@Ord_hdrnumber)+''
						EXEC(@SqlCmd)
						SET @StopCollectionCopy = @StopCollection
						SELECT @STOPRESULT ='STOPS - NEW RECORD'
						DELETE FROM @temp
					END
					ELSE
					BEGIN
						-- PUP STOP CONDITION BEGIN
						DELETE FROM @temp
						EXEC @SqlCmd = dbo.FnStopsCondition @Collection=@PUPStopCollection,@Type='''PUP''',@ORD_HDRNUMBER=@ORD_HDRNUMBER,@WORKFLOWTEMPLATEID = @WORKFLOWTEMPLATEID;
						INSERT @TEMP
						EXEC (@SqlCmd)
						IF (SELECT * FROM @TEMP) != 0
							SELECT @STOPRESULT =  'NO CHANGES IN STOPS'
						ELSE SELECT @STOPRESULT =  'PUP.STOP CHANGED'
						DELETE FROM @TEMP
						-- PUP STOP CONDITION END
						-- DRP STOP CONDITION END
						EXEC @SqlCmd = dbo.FnStopsCondition @Collection=@DRPStopCollection,@Type='''DRP''',@ORD_HDRNUMBER=@ORD_HDRNUMBER,@WORKFLOWTEMPLATEID = @WORKFLOWTEMPLATEID;
						INSERT @TEMP
						EXEC (@SqlCmd)
						IF (SELECT * FROM @TEMP) = 0
						BEGIN
							SELECT @STOPRESULT =  'DRP.STOP CHANGED'
						END
						DELETE FROM @TEMP
						-- DRP STOP CONDITION END
						-- ALL STOP CONDITION BEGIN
						EXEC @SqlCmd = dbo.FnStopsCondition @Collection=@ALLStopCollection,@Type='''PUP'',''DRP'',''NONE''',@ORD_HDRNUMBER=@ORD_HDRNUMBER,@WORKFLOWTEMPLATEID = @WORKFLOWTEMPLATEID;
						--EXEC @SqlCmd = dbo.FnStopsCondition @Collection=@ALLStopCollection,@Type='''PUP'',''DRP''',@ORD_HDRNUMBER=@ORD_HDRNUMBER,@TableName1='STOPS',@TableName2='WCSTOPTRACKING'; 
						INSERT @TEMP
						EXEC (@SqlCmd)
						SET @SqlCmd ='SELECT COUNT(0) FROM STOPS S RIGHT JOIN WCSTOPTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)+' ST ON ST.ORD_HDRNUMBER = S.ORD_HDRNUMBER WHERE S.STP_NUMBER = ST.STP_NUMBER AND S.STP_TYPE IN (''PUP'',''DRP'',''NONE'') AND S.ORD_HDRNUMBER ='+CONVERT(VARCHAR(50),@Ord_hdrnumber) 
						INSERT @TEMP1
						EXEC (@SqlCmd)
						IF ((SELECT * FROM @TEMP)!=(SELECT * FROM @TEMP1))
						BEGIN
							SELECT @STOPRESULT =  'ALL.STOP CHANGED'
						END
						DELETE FROM @TEMP			
						-- ALL STOP CONDITION END
						-- NONE STOP CONDITION BEGIN
						SET @SqlCmd = 'SELECT COUNT(0) FROM  WCSTOPTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)+'  ST WHERE ST.STP_TYPE =''NONE'' AND ST.ORD_HDRNUMBER ='+CONVERT(VARCHAR(50),@Ord_hdrnumber)
						INSERT @TEMP
						EXEC (@SqlCmd)
						IF (SELECT * FROM @TEMP) = 0
						BEGIN
							--SELECT @STOPRESULT =  'NO CHANGES IN STOPS'
							DELETE FROM @TEMP
						END
						ELSE
						BEGIN
							DELETE FROM @TEMP
							EXEC @SqlCmd = dbo.FnStopsCondition @Collection=@NONEStopCollection,@Type='''NONE''',@ORD_HDRNUMBER=@ORD_HDRNUMBER,@WORKFLOWTEMPLATEID = @WORKFLOWTEMPLATEID;
							--EXEC @SqlCmd = dbo.FnStopsCondition @Collection=@NONEStopCollection,@Type='''NONE',@ORD_HDRNUMBER=@ORD_HDRNUMBER,@TableName1='STOPS',@TableName2='WCSTOPTRACKING'; 
							INSERT @TEMP
							EXEC (@SqlCmd)
							IF (SELECT * FROM @TEMP) = 0
							BEGIN
								SELECT @STOPRESULT =  'NONE.STOP CHANGED'
							END
						END
						DELETE FROM @TEMP
						-- NONE STOP CONDITION END 
						IF (@STOPRESULT <> 'STOPS - NEW RECORD')
						BEGIN
							SET @SqlCmd = 'DELETE FROM WCSTOPTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)+'  WHERE ORD_HDRNUMBER ='+ CONVERT(VARCHAR(50),@Ord_hdrnumber)
							EXEC (@SqlCmd)
							SET @SqlCmd = 'INSERT INTO WCSTOPTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)+'  SELECT S.ORD_HDRNUMBER, S.STP_NUMBER, S.STP_TYPE,  '		
							WHILE LEN(@StopCollectionCopy) > 0
							BEGIN --WHILE
								SET @Column_End = CHARINDEX(',', @StopCollectionCopy)
								IF @Column_End = 0
								SET @Column_End = LEN(@StopCollectionCopy) + 1
								SET @Column = LTRIM(RTRIM(LEFT(@StopCollectionCopy, @Column_End - 1)))
								SET @SqlCmd = @SqlCmd  + ' S.[' + @Column + '],'
								SET @StopCollectionCopy = SUBSTRING(@StopCollectionCopy, @Column_End + 1, 2000000000)
							END--WHILE
							SET @SqlCmd =  LEFT(@SqlCmd, LEN(@SqlCmd) - 1) + ' FROM STOPS S WHERE S.ORD_HDRNUMBER ='+CONVERT(VARCHAR(50),@Ord_hdrnumber)+''
							EXEC(@SqlCmd)
							SET @StopCollectionCopy = @StopCollection
						END			
					END	
				END		
				ELSE
					SELECT @STOPRESULT = ' '
            END
		--WCStopTracking END
		--WCFREIGHTTracking BEGIN
		DELETE FROM @TEMP
			SET @SqlCmd = 'SELECT COUNT(0) FROM ORDERHEADER WHERE ORD_HDRNUMBER ='+CONVERT(VARCHAR(50),@Ord_hdrnumber)
			INSERT @TEMP
			EXEC (@SqlCmd)
			IF((SELECT * FROM @TEMP) = 0)
			BEGIN
				SELECT @FREIGHTRESULT = 'FREIGHTS - NO RECORD FOUND'
				DELETE FROM @TEMP
			END
			ELSE
			BEGIN	
				DELETE FROM @TEMP

		IF (EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'WCFREIGHTTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)))
		BEGIN
			SET @SqlCmd = 'SELECT COUNT(0) FROM WCFREIGHTTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)+'  WHERE ORD_HDRNUMBER ='+CONVERT(VARCHAR(50),@Ord_hdrnumber)
			INSERT @TEMP
			EXEC (@SqlCmd)				
			IF (SELECT * FROM @TEMP) = 0
			BEGIN
				SET @SqlCmd = 'INSERT INTO WCFREIGHTTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)+'  SELECT S.ORD_HDRNUMBER, S.STP_NUMBER, F.FGT_NUMBER, S.STP_TYPE,  '		
				WHILE LEN(@FREIGHTCollectionCopy) > 0
				BEGIN --WHILE 
					SET @Column_End = CHARINDEX(',', @FREIGHTCollectionCopy)
					IF @Column_End = 0
					SET @Column_End = LEN(@FREIGHTCollectionCopy) + 1
					SET @Column = LTRIM(RTRIM(LEFT(@FREIGHTCollectionCopy, @Column_End - 1)))
					SET @SqlCmd = @SqlCmd  + ' F.[' + @Column + '],'
					SET @FREIGHTCollectionCopy = SUBSTRING(@FREIGHTCollectionCopy, @Column_End + 1, 2000000000)
				END--WHILE
				SET @SqlCmd =  LEFT(@SqlCmd, LEN(@SqlCmd) - 1) + ' FROM STOPS S, FREIGHTDETAIL F WHERE S.STP_NUMBER = F.STP_NUMBER AND S.ORD_HDRNUMBER ='+CONVERT(VARCHAR(50),@Ord_hdrnumber)+''
				EXEC(@SqlCmd)
				SET @FREIGHTCollectionCopy = @FREIGHTCollection
				SELECT @FREIGHTRESULT ='FREIGHTS - NEW RECORD'
				DELETE FROM @TEMP
			END
			ELSE
			BEGIN
				DELETE FROM @TEMP
				-- PUP STOP-Freight CONDITION BEGIN
				EXEC @SqlCmd = dbo.[FnFreightsCondition] @Collection=@PUPFREIGHTCollection,@Type='''PUP''',@ORD_HDRNUMBER=@ORD_HDRNUMBER,@WORKFLOWTEMPLATEID = @WORKFLOWTEMPLATEID; 
				INSERT @TEMP
				EXEC (@SqlCmd)
				IF (SELECT * FROM @TEMP) != 0
				SELECT @FREIGHTRESULT =  'NO CHANGES IN FREIGHT'
				ELSE SELECT @FREIGHTRESULT =  'PUP.FREIGHT CHANGED'
				DELETE FROM @TEMP
				-- PUP STOP-Freight CONDITION END
				-- DRP STOP-Freight CONDITION BEGIN
				EXEC @SqlCmd = dbo.[FnFreightsCondition] @Collection=@DRPFREIGHTCollection,@Type='''DRP''',@ORD_HDRNUMBER=@ORD_HDRNUMBER,@WORKFLOWTEMPLATEID = @WORKFLOWTEMPLATEID; 
				INSERT @TEMP
				EXEC (@SqlCmd)						
				IF (SELECT * FROM @TEMP) = 0
				BEGIN
					SELECT @FREIGHTRESULT =  'DRP.FREIGHT CHANGED'
				END
				DELETE FROM @TEMP
				-- DRP STOP-Freight CONDITION END
				-- ALL STOP-Freight CONDITION BEGIN
				EXEC @SqlCmd = dbo.[FnFreightsCondition] @Collection=@ALLFREIGHTCollection,@Type='''PUP'',''DRP'',''NONE''',@ORD_HDRNUMBER=@ORD_HDRNUMBER,@WORKFLOWTEMPLATEID = @WORKFLOWTEMPLATEID; 
				INSERT @TEMP
				EXEC (@SqlCmd)
				SET @SqlCmd ='SELECT COUNT(0) FROM FREIGHTDETAIL F JOIN STOPS S ON S.STP_NUMBER = F.STP_NUMBER RIGHT JOIN WCFREIGHTTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)+ ' FT ON FT.STP_NUMBER = F.STP_NUMBER WHERE FT.STP_TYPE IN (''PUP'',''DRP'',''NONE'') AND FT.STP_NUMBER =F.STP_NUMBER AND FT.STP_NUMBER = S.STP_NUMBER AND S.ORD_HDRNUMBER ='+CONVERT(VARCHAR(50),@Ord_hdrnumber) 	
				DELETE FROM @TEMP1
				INSERT @TEMP1	
				EXEC (@SqlCmd)				
				IF ((SELECT * FROM @TEMP)!= (SELECT * FROM @TEMP1))
				BEGIN
					SELECT @FREIGHTRESULT =  'ALL.FREIGHT CHANGED'
				END
				DELETE FROM @TEMP
				-- ALL STOP-Freight CONDITION END
				-- NONE STOP-Freight CONDITION BEGIN
				SET @SqlCmd ='SELECT COUNT(0) FROM  WCFREIGHTTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)+ ' FT WHERE FT.STP_TYPE = ''NONE'' AND FT.ORD_HDRNUMBER ='+CONVERT(VARCHAR(50),@Ord_hdrnumber)
				INSERT @TEMP
				EXEC (@SqlCmd)
				IF (SELECT * FROM @TEMP) = 0
				BEGIN
					--SELECT @FREIGHTRESULT =  'NO CHANGES IN FREIGHT'
					DELETE FROM @TEMP
				END
				ELSE
				BEGIN
					DELETE FROM @TEMP
					EXEC @SqlCmd = dbo.[FnFreightsCondition] @Collection=@NONEFREIGHTCollection,@Type='''NONE''',@ORD_HDRNUMBER=@ORD_HDRNUMBER,@WORKFLOWTEMPLATEID = @WORKFLOWTEMPLATEID;
					INSERT @TEMP
					EXEC (@SqlCmd)	
					IF (SELECT * FROM @TEMP) = 0
					BEGIN
						SELECT @FREIGHTRESULT =  'NONE.FREIGHT CHANGED'
					END
				END				 
				DELETE FROM @TEMP
				-- NONE STOP-Freight CONDITION END 
			--	IF @FREIGHTRESULT <> 'NO CHANGES IN FREIGHT'  
			IF @FREIGHTRESULT <> 'FREIGHTS - NEW RECORD'
				BEGIN	
					SET @SqlCmd = 'DELETE FROM WCFREIGHTTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)+'  WHERE ORD_HDRNUMBER = '+CONVERT(VARCHAR(50),@Ord_hdrnumber)
					EXEC (@SqlCmd)
					SET @SqlCmd = 'INSERT INTO WCFREIGHTTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)+'  SELECT S.ORD_HDRNUMBER, F.STP_NUMBER, F.FGT_NUMBER, S.STP_TYPE,   '		
					WHILE LEN(@FREIGHTCollectionCopy) > 0
					BEGIN --WHILE
						SET @Column_End = CHARINDEX(',', @FREIGHTCollectionCopy)
						IF @Column_End = 0
						SET @Column_End = LEN(@FREIGHTCollectionCopy) + 1
						SET @Column = LTRIM(RTRIM(LEFT(@FREIGHTCollectionCopy, @Column_End - 1)))
						SET @SqlCmd = @SqlCmd  + ' F.[' + @Column + '],'
						SET @FREIGHTCollectionCopy = SUBSTRING(@FREIGHTCollectionCopy, @Column_End + 1, 2000000000)
					END--WHILE
					SET @SqlCmd =  LEFT(@SqlCmd, LEN(@SqlCmd) - 1) + ' FROM FREIGHTDETAIL F JOIN STOPS S ON S.STP_NUMBER = F.STP_NUMBER WHERE S.ORD_HDRNUMBER ='+CONVERT(VARCHAR(50),@Ord_hdrnumber)+''
					EXEC(@SqlCmd)
					SET @FREIGHTCollectionCopy = @FREIGHTCollection
				END
			END	
		END	
		ELSE
		SELECT @FREIGHTRESULT = ' '
	END
		--WCFREIGHTTracking END
		--WCEvent BEGIN
		DELETE FROM @TEMP
			SET @SqlCmd = 'SELECT COUNT(0) FROM ORDERHEADER WHERE ORD_HDRNUMBER ='+CONVERT(VARCHAR(50),@Ord_hdrnumber)
			INSERT @TEMP
			EXEC (@SqlCmd)
			IF((SELECT * FROM @TEMP) = 0)
			BEGIN
				SELECT @EVENTRESULT = 'EVENT - NO RECORD FOUND'
				DELETE FROM @TEMP
			END
			ELSE
			BEGIN	
				DELETE FROM @TEMP
		IF (EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'WCEVENTTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)))
		BEGIN
			SET @SqlCmd = 'SELECT COUNT(0) FROM WCEventTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)+'  WHERE ORD_HDRNUMBER = '+CONVERT(VARCHAR(50),@Ord_hdrnumber)
			INSERT @TEMP
			EXEC (@SqlCmd)
			IF (SELECT * FROM @TEMP) = 0
			BEGIN
				SET @SqlCmd = 'INSERT INTO WCEventTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)+'  SELECT E.ORD_HDRNUMBER, E.STP_NUMBER, S.STP_TYPE, E.EVT_NUMBER,  '		
				WHILE LEN(@EVENTCollectionCopy) > 0
				BEGIN --WHILE
					SET @Column_End = CHARINDEX(',', @EVENTCollectionCopy)
					IF @Column_End = 0
					SET @Column_End = LEN(@EVENTCollectionCopy) + 1
					SET @Column = LTRIM(RTRIM(LEFT(@EVENTCollectionCopy, @Column_End - 1)))
					SET @SqlCmd = @SqlCmd  + ' E.[' + @Column + '],'
					SET @EVENTCollectionCopy = SUBSTRING(@EVENTCollectionCopy, @Column_End + 1, 2000000000)
				END--WHILE
				SET @SqlCmd =  LEFT(@SqlCmd, LEN(@SqlCmd) - 1) + ' FROM STOPS S, EVENT E WHERE S.STP_NUMBER = E.STP_NUMBER AND S.ORD_HDRNUMBER = E.ORD_HDRNUMBER AND E.ORD_HDRNUMBER ='+CONVERT(VARCHAR(50),@Ord_hdrnumber)+''
				EXEC(@SqlCmd)
				SET @EVENTCollectionCopy = @EVENTCollection
				SELECT @EVENTRESULT ='EVENT - NEW RECORD'
				DELETE FROM @TEMP				
			END
			ELSE
			BEGIN
				DELETE FROM @TEMP
				-- PUP STOP-EVENT CONDITION BEGIN
				EXEC @SqlCmd = dbo.[FnEVENTsCondition] @Collection=@PUPEVENTCollection,@Type='''PUP''',@ORD_HDRNUMBER=@ORD_HDRNUMBER,@WORKFLOWTEMPLATEID = @WORKFLOWTEMPLATEID;
				INSERT @TEMP
				EXEC (@SqlCmd)
				IF (SELECT * FROM @TEMP) != 0
				SELECT @EVENTRESULT =  'NO CHANGES IN EVENT'
				ELSE SELECT @EVENTRESULT =  'PUP.EVENT CHANGED'
				DELETE FROM @TEMP
				-- PUP STOP-EVENT CONDITION END
				-- DRP STOP-EVENT CONDITION BEGIN
				EXEC @SqlCmd = dbo.[FnEVENTsCondition] @Collection=@DRPEVENTCollection,@Type='''DRP''',@ORD_HDRNUMBER=@ORD_HDRNUMBER,@WORKFLOWTEMPLATEID = @WORKFLOWTEMPLATEID;
				INSERT @TEMP
				EXEC (@SqlCmd)						
				IF (SELECT * FROM @TEMP) = 0
				BEGIN
					SELECT @EVENTRESULT =  'DRP.EVENT CHANGED'
				END
				DELETE FROM @TEMP
				-- DRP STOP-EVENT CONDITION END
				-- ALL STOP-EVENT CONDITION BEGIN
				EXEC @SqlCmd = dbo.[FnEVENTsCondition] @Collection=@ALLEVENTCollection,@Type='''PUP'',''DRP'',''NONE''',@ORD_HDRNUMBER=@ORD_HDRNUMBER,@WORKFLOWTEMPLATEID = @WORKFLOWTEMPLATEID;
				INSERT @TEMP
				EXEC (@SqlCmd)	
				SET @SqlCmd = 'SELECT COUNT(0) FROM EVENT E JOIN STOPS S ON S.STP_NUMBER = E.STP_NUMBER RIGHT JOIN WCEVENTTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)+' ET ON ET.STP_NUMBER = E.STP_NUMBER 
			WHERE ET.STP_TYPE IN (''PUP'',''DRP'',''NONE'') AND ET.STP_NUMBER = E.STP_NUMBER AND e.evt_number = et.evt_number and E.ORD_HDRNUMBER ='+CONVERT(VARCHAR(50),@Ord_hdrnumber)					
			DELETE FROM @TEMP1
			INSERT @TEMP1
			EXEC (@SqlCmd)
				IF ((SELECT * FROM @TEMP)!= (SELECT * FROM @TEMP1))
				BEGIN
					SELECT @EVENTRESULT =  'ALL.EVENT CHANGED'
				END
				DELETE FROM @TEMP
				-- ALL STOP-EVENT CONDITION END
				-- NONE STOP-EVENT CONDITION BEGIN
				SET @SqlCmd ='SELECT COUNT(0) FROM  WCEVENTTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)+'  ET WHERE ET.STP_TYPE = ''NONE'' AND ET.ORD_HDRNUMBER ='+CONVERT(VARCHAR(50),@Ord_hdrnumber)
				INSERT @TEMP
				EXEC (@SqlCmd)
				IF (SELECT * FROM @TEMP)= 0
				BEGIN
					--SELECT @EVENTRESULT =  'NO CHANGES IN EVENTS'
					DELETE FROM @TEMP
				END
				ELSE
				BEGIN
					DELETE FROM @TEMP
					EXEC @SqlCmd = dbo.[FnEVENTsCondition] @Collection=@NONEEVENTCollection,@Type='''NONE''',@ORD_HDRNUMBER=@ORD_HDRNUMBER,@WORKFLOWTEMPLATEID = @WORKFLOWTEMPLATEID;
					INSERT @TEMP
					EXEC (@SqlCmd)						
					IF (SELECT * FROM @TEMP)= 0
					BEGIN
						SELECT @EVENTRESULT =  'NONE.EVENT CHANGED'
					END
				END
				DELETE FROM @TEMP
				-- NONE STOP-EVENT CONDITION END 
				IF @EVENTRESULT <> 'EVENT - NEW RECORD'
				BEGIN	
					SET @SqlCmd = 'DELETE FROM WCEVENTTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)+'  WHERE ORD_HDRNUMBER ='+ CONVERT(VARCHAR(50),@Ord_hdrnumber)				
					EXEC (@SqlCmd)
					SET @SqlCmd = 'INSERT INTO WCEVENTTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)+'  SELECT E.ORD_HDRNUMBER, E.STP_NUMBER, S.STP_TYPE, E.EVT_NUMBER,  '		
					WHILE LEN(@EVENTCollectionCopy) > 0
					BEGIN --WHILE
						SET @Column_End = CHARINDEX(',', @EVENTCollectionCopy)
						IF @Column_End = 0
						SET @Column_End = LEN(@EVENTCollectionCopy) + 1
						SET @Column = LTRIM(RTRIM(LEFT(@EVENTCollectionCopy, @Column_End - 1)))
						SET @SqlCmd = @SqlCmd  + ' E.[' + @Column + '],'
						SET @EVENTCollectionCopy = SUBSTRING(@EVENTCollectionCopy, @Column_End + 1, 2000000000)
					END--WHILE
					SET @SqlCmd =  LEFT(@SqlCmd, LEN(@SqlCmd) - 1) + ' FROM EVENT E JOIN STOPS S ON S.STP_NUMBER = E.STP_NUMBER AND S.ORD_HDRNUMBER = E.ORD_HDRNUMBER WHERE E.ORD_HDRNUMBER ='+CONVERT(VARCHAR(50),@Ord_hdrnumber)+''
					EXEC(@SqlCmd)
					SET @EVENTCollectionCopy = @EVENTCollectionCopy
				END
			END	
		END
		ELSE
		SELECT @EVENTRESULT = ' '
	END
		--WCEvent END
		DELETE FROM @TEMP
			SET @SqlCmd = 'SELECT COUNT(0) FROM ORDERHEADER WHERE ORD_HDRNUMBER ='+CONVERT(VARCHAR(50),@Ord_hdrnumber)
			INSERT @TEMP
			EXEC (@SqlCmd)
			IF((SELECT * FROM @TEMP) = 0)
			BEGIN
				SELECT @REFRESULT = 'REFERENCENUMBER - NO RECORD FOUND'
				DELETE FROM @TEMP
			END
			ELSE
			BEGIN	
				DELETE FROM @TEMP
		IF (EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'WCREFNUMTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)))
		BEGIN
			--ReferenceNumber Tracking Begin
			SET @SqlCmd = 'SELECT COUNT(0) FROM WCREFNUMTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)+'  WHERE ORD_HDRNUMBER ='+CONVERT(VARCHAR(50),@Ord_hdrnumber)
			INSERT @TEMP
			EXEC (@SqlCmd)
			IF (SELECT * FROM @TEMP) = 0
			BEGIN
				SET @SqlCmd = 'INSERT INTO WCREFNUMTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)+'  SELECT ORD_HDRNUMBER, REF_NUMBER, REF_TABLE, REF_TYPE FROM REFERENCENUMBER  WHERE '		
				WHILE LEN(@REFNUMCollectionCopy) > 0
				BEGIN --WHILE
					SET @Column_End = CHARINDEX(',', @REFNUMCollectionCopy)
					IF @Column_End = 0
					SET @Column_End = LEN(@REFNUMCollectionCopy) + 1
					SET @Column = LTRIM(RTRIM(LEFT(@REFNUMCollectionCopy, @Column_End - 1)))
					SET @SqlCmd = @SqlCmd  + ' REF_TYPE  = ''' + @Column + ''' AND  '
					SET @REFNUMCollectionCopy = SUBSTRING(@REFNUMCollectionCopy, @Column_End + 1, 2000000000)
				END--WHILE
				SET @SqlCmd = @SqlCmd + ' ORD_HDRNUMBER ='+CONVERT(VARCHAR(50),@Ord_hdrnumber)+''
				EXEC(@SqlCmd)
				SET @REFNUMCollectionCopy = @REFTYPECollection
				SELECT @REFRESULT ='REFERENCENUMBER - NEW RECORD'
				DELETE FROM @TEMP
				SET @SqlCmd = 'SELECT COUNT(0) FROM WCREFNUMTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)+'  WHERE ORD_HDRNUMBER ='+CONVERT(VARCHAR(50),@Ord_hdrnumber)
				INSERT @TEMP
				EXEC (@SqlCmd)
				IF (SELECT * FROM @TEMP) = 0
				SELECT @REFRESULT ='REFERENCENUMBER - NO RECORD FOUND'
			END
			ELSE
			BEGIN
				DELETE FROM @TEMP
				SET @SqlCmd = 'SELECT COUNT(0) FROM REFERENCENUMBER R RIGHT JOIN WCREFNUMTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)+'  RT ON RT.ORD_HDRNUMBER = R.ORD_HDRNUMBER 
				WHERE R.REF_TABLE=RT.REF_TABLE AND R.REF_NUMBER=RT.REF_NUMBER AND R.REF_TYPE=RT.REF_TYPE AND R.ORD_HDRNUMBER =' +CONVERT(VARCHAR(50),@ORD_HDRNUMBER)+'  AND  R.REF_TYPE IN ('
				WHILE LEN(@REFTYPECollection) > 0
				BEGIN --WHILE
					SET @Column_End = CHARINDEX(',', @REFTYPECollection)
					IF @Column_End = 0
					SET @Column_End = LEN(@REFTYPECollection) + 1
					SET @Column = LTRIM(RTRIM(LEFT(@REFTYPECollection, @Column_End - 1)))
					--SET @SqlCmd = @SqlCmd  + ' AND  R.REF_TYPE  = ''' + @Column + ''' '
					SET @SqlCmd = @SqlCmd  +''''+@Column+''''+','
					SET @REFTYPECollection = SUBSTRING(@REFTYPECollection, @Column_End + 1, 2000000000)
				END --WHILE
				SET @SqlCmd = LEFT(@SqlCmd, LEN(@SqlCmd) - 1) + ')'
			INSERT @TEMP
			EXEC (@SqlCmd)						
			IF (SELECT * FROM @TEMP) = 0
			BEGIN
				DELETE FROM @TEMP
				SET @SqlCmd ='DELETE FROM WCREFNUMTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)+'  WHERE ORD_HDRNUMBER ='+CONVERT(VARCHAR(50),@Ord_hdrnumber)
				EXEC (@SqlCmd)
				SET @SqlCmd = 'INSERT INTO WCREFNUMTRACKING_'+CONVERT(VARCHAR(50),@WORKFLOWTEMPLATEID)+'  SELECT ORD_HDRNUMBER, REF_NUMBER, REF_TABLE, REF_TYPE FROM REFERENCENUMBER  WHERE  REF_TYPE IN ( '		
				WHILE LEN(@REFNUMCollectionCopy) > 0
					BEGIN --WHILE
						SET @Column_End = CHARINDEX(',', @REFNUMCollectionCopy)
						IF @Column_End = 0
						SET	@Column_End = LEN(@REFNUMCollectionCopy) + 1
						SET @Column = LTRIM(RTRIM(LEFT(@REFNUMCollectionCopy, @Column_End - 1)))
							SET @SqlCmd = @SqlCmd  +''''+@Column+''''+','
						SET @REFNUMCollectionCopy = SUBSTRING(@REFNUMCollectionCopy, @Column_End + 1, 2000000000)
					END--WHILE
					 
				SET @SqlCmd = LEFT(@SqlCmd, LEN(@SqlCmd) - 1) + ') ORD_HDRNUMBER ='+CONVERT(VARCHAR(50),@Ord_hdrnumber)+''
				EXEC(@SqlCmd)
				SELECT @REFRESULT = 'REFERENCE NUMBER CHANGED'
			END
			ELSE
				SELECT @REFRESULT =  'NO CHANGES IN REFERENCE NUMBER'
				DELETE FROM @TEMP
			END

		END	
		ELSE
		SELECT @REFRESULT = ' '
	END
		--ReferenceNumber Tracking End	
	END 
COMMIT TRANSACTION
END TRY
BEGIN CATCH
 IF @@TRANCOUNT > 0
 ROLLBACK TRANSACTION

  SET @ErrorNumber  = ERROR_NUMBER()
    SET @ErrorLine  = ERROR_LINE()
    SET @ErrorMessage  = ERROR_MESSAGE()
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

	SET @Result = ' '
	SET @STOPRESULT =''
	SET @FREIGHTRESULT = ' '
	SET @EVENTRESULT = ' '
	SET @REFRESULT = ' '

    --DECLARE @ErrorNumber INT = ERROR_NUMBER();
    --DECLARE @ErrorLine INT = ERROR_LINE();
    --DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    --DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    --DECLARE @ErrorState INT = ERROR_STATE();

 --   PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
 --   PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));
	--PRINT 'Actual error message: ' + CAST(@ErrorMessage AS VARCHAR(1000));

   -- RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH

END
GO
GRANT EXECUTE ON  [dbo].[ORDERDETAILSCHANGED_TRANS] TO [public]
GO
